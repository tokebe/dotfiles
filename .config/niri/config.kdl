environment {
    DISPLAY ":0"
}

input {
    keyboard {
        xkb {
            // For more information, see xkeyboard-config(7).
        }

        repeat-delay 600
        repeat-rate 25
    }

    // Next sections include libinput settings.
    // Omitting settings disables them, or leaves them at their default values.
    touchpad {
        // off
        tap
        // dwt
        // dwtp
        natural-scroll
        // accel-speed 0.2
        // accel-profile "flat"
        // scroll-method "two-finger"
        // disabled-on-external-mouse
    }

    mouse {
        // off
        // natural-scroll
        // accel-speed 0.2
        // accel-profile "flat"
        // scroll-method "no-scroll"
    }

    // warp-mouse-to-focus
    // focus-follows-mouse
}

// You can configure outputs by their name, which you can find
// by running `niri msg outputs` while inside a niri instance.
// https://github.com/YaLTeR/niri/wiki/Configuration:-Outputs
output "DP-2" {
    mode "3440x1440@99.998"
        position x=1920 y=0
}

output "HDMI-A-1" {
    mode "1920x1080@60"
    position x=0 y=180
}

output "DP-1" {
    mode "1920x1080@60"
    position x=5360 y=180
}

// Settings that influence how windows are positioned and sized.
// https://github.com/YaLTeR/niri/wiki/Configuration:-Layout
layout {
    // Set gaps around windows in logical pixels.
    gaps 24

    // - "never", default behavior, focusing an off-screen column will keep at the left
    //   or right edge of the screen.
    // - "always", the focused column will always be centered.
    // - "on-overflow", focusing a column will center it if it doesn't fit
    //   together with the previously focused column.
    center-focused-column "never"
    always-center-single-column

    // "proportion" for proportion of screen
    // "fixed" for actual pixel width
    preset-column-widths {
        proportion 0.33333
        proportion 0.44444
        proportion 0.5
        proportion 0.55556
        proportion 0.66667
    }

    // If you leave the brackets empty, the windows themselves will decide their initial width.
    default-column-width { proportion 0.44444; }

    preset-window-heights {
        proportion 0.15
        proportion 0.33333
        proportion 0.5
        proportion 0.66667
        proportion 0.85
    }


    focus-ring {
        // off

        // How many logical pixels the ring extends out from the windows.
        width 4

        active-gradient from="#f6c177" to="#9ccfd8" angle=45 in="oklch longer hue" relative-to="workspace-view"
        inactive-gradient from="#505050" to="#a1a1a1" angle=45 in="oklch longer hue" relative-to="workspace-view"
    }

    // You can also add a border. It's similar to the focus ring, but always visible.
    border {
        off

        width 3
        active-color "#ffc87f"
        inactive-color "#505050"
    }

    // Struts shrink the area occupied by windows, similarly to layer-shell panels.
    // You can think of them as a kind of outer gaps. They are set in logical pixels.
    // Left and right struts will cause the next window to the side to always be visible.
    // Top and bottom struts will simply add outer gaps in addition to the area occupied by
    // layer-shell panels and regular gaps.
    struts {
        // left 16
        // right 16
        // top 32
        // bottom 32
    }

    insert-hint {
        gradient from="#ffbb66" to="#ffc880" angle=45 in="oklch longer hue" relative-to="workspace-view"
    }

    tab-indicator {
        gap 8
        width 6
        length total-proportion=0.4
        corner-radius 3
        gaps-between-tabs 3
    }


}

screenshot-path "~/Pictures/Screenshots/%Y-%m-%d %H-%M-%S.png"

// Add lines like this to spawn processes at startup.
// Note that running niri as a session supports xdg-desktop-autostart,
// which may be more convenient to use.
// See the binds section below for more spawn examples.
// spawn-at-startup "alacritty" "-e" "fish"
// spawn-at-startup "/home/alter/.config/swww/cycle"

// Window rules let you adjust behavior for individual windows.
// https://github.com/YaLTeR/niri/wiki/Configuration:-Window-Rules

// Work around WezTerm's initial configure bug
// by setting an empty default-column-width.
window-rule {
    // This regular expression is intentionally made as specific as possible,
    // since this is the default config, and we want no false positives.
    // You can get away with just app-id="wezterm" if you want.
    match app-id=r#"^org\.wezfurlong\.wezterm$"#
    default-column-width {}
}

prefer-no-csd

window-rule {
    geometry-corner-radius 10
    clip-to-geometry true
}

// Floating windows have shadow
window-rule {
    match is-floating=true
    shadow {
        on
    }
}

// Highlight screen-shared windows
window-rule {
    match is-window-cast-target=true

    focus-ring {
        active-color "#eb6f92"
        inactive-color "#ea9a97"
    }

    tab-indicator {
        active-color "#eb6f92"
        inactive-color "#ea9a97"
    }
}

// Example: block out two password managers from screen capture.
// (This example rule is commented out with a "/-" in front.)
/-window-rule {
    match app-id=r#"^org\.keepassxc\.KeePassXC$"#
    match app-id=r#"^org\.gnome\.World\.Secrets$"#

    block-out-from "screen-capture"

    // Use this instead if you want them visible on third-party screenshot tools.
    // block-out-from "screencast"
}

binds {
    // Most actions that you can bind here can also be invoked programmatically with
    // `niri msg action do-something`.

    // Mod-Shift-/, which is usually the same as Mod-?,
    // shows a list of important hotkeys.
    Mod+Shift+Slash { show-hotkey-overlay; }

    // Suggested binds for running programs: terminal, app launcher, screen locker.
    Mod+Shift+T { spawn "alacritty"; }
    Mod+Space { spawn "fuzzel"; }
    // Super+Alt+L { spawn "swaylock"; }

    // You can also use a shell. Do this if you need pipes, multiple commands, etc.
    // Note: the entire command goes as a single argument in the end.
    // Mod+T { spawn "bash" "-c" "notify-send hello && exec alacritty"; }

    // Example volume keys mappings for PipeWire & WirePlumber.
    // The allow-when-locked=true property makes them work even when the session is locked.
    XF86AudioRaiseVolume allow-when-locked=true { spawn "wpctl" "set-volume" "@DEFAULT_AUDIO_SINK@" "0.1+"; }
    XF86AudioLowerVolume allow-when-locked=true { spawn "wpctl" "set-volume" "@DEFAULT_AUDIO_SINK@" "0.1-"; }
    XF86AudioMute        allow-when-locked=true { spawn "wpctl" "set-mute" "@DEFAULT_AUDIO_SINK@" "toggle"; }
    XF86AudioMicMute     allow-when-locked=true { spawn "wpctl" "set-mute" "@DEFAULT_AUDIO_SOURCE@" "toggle"; }

    Mod+Q { close-window; }

    Mod+Left  { focus-column-or-monitor-left; }
    Mod+Down  { focus-window-or-monitor-down; }
    Mod+Up    { focus-window-or-monitor-up; }
    Mod+Right { focus-column-or-monitor-right; }
    Mod+H     { focus-column-or-monitor-left; }
    // Mod+J     { focus-window-or-monitor-down; }
    // Mod+K     { focus-window-or-monitor-up; }
    Mod+L     { focus-column-or-monitor-right; }

    Mod+Shift+Left  { move-column-left-or-to-monitor-left; }
    Mod+Shift+Down  { move-window-down; }
    Mod+Shift+Up    { move-window-up; }
    Mod+Shift+Right { move-column-right-or-to-monitor-right; }
    Mod+Shift+H     { move-column-left-or-to-monitor-left; }
    // Mod+Shift+J     { move-window-down; }
    // Mod+Shift+K     { move-window-up; }
    Mod+Shift+L     { move-column-right-or-to-monitor-right; }

    // Alternative commands that move across workspaces when reaching
    // the first or last window in a column.
    Mod+J     { focus-window-or-workspace-down; }
    Mod+K     { focus-window-or-workspace-up; }
    Mod+Shift+J     { move-window-down-or-to-workspace-down; }
    Mod+Shift+K     { move-window-up-or-to-workspace-up; }

    Mod+Home { focus-column-first; }
    Mod+End  { focus-column-last; }
    Mod+Shift+Home { move-column-to-first; }
    Mod+Shift+End  { move-column-to-last; }

    Mod+Alt+Left  { focus-monitor-left; }
    Mod+Alt+Down  { focus-monitor-down; }
    Mod+Alt+Up    { focus-monitor-up; }
    Mod+Alt+Right { focus-monitor-right; }
    Mod+Alt+H     { focus-monitor-left; }
    Mod+Alt+J     { focus-monitor-down; }
    Mod+Alt+K     { focus-monitor-up; }
    Mod+Alt+L     { focus-monitor-right; }

    Mod+Alt+Shift+Left  { move-column-to-monitor-left; }
    Mod+Alt+Shift+Down  { move-column-to-monitor-down; }
    Mod+Alt+Shift+Up    { move-column-to-monitor-up; }
    Mod+Alt+Shift+Right { move-column-to-monitor-right; }
    Mod+Alt+Shift+H     { move-column-to-monitor-left; }
    Mod+Alt+Shift+J     { move-column-to-monitor-down; }
    Mod+Alt+Shift+K     { move-column-to-monitor-up; }
    Mod+Alt+Shift+L     { move-column-to-monitor-right; }

    // Alternatively, there are commands to move just a single window:
    // Mod+Shift+Ctrl+Left  { move-window-to-monitor-left; }
    // ...

    // And you can also move a whole workspace to another monitor:
    // Mod+Shift+Ctrl+Left  { move-workspace-to-monitor-left; }
    // ...

    Mod+Page_Down      { focus-workspace-down; }
    Mod+Page_Up        { focus-workspace-up; }
    Mod+U              { focus-workspace-down; }
    Mod+I              { focus-workspace-up; }
    Mod+Shift+Page_Down { move-column-to-workspace-down; }
    Mod+Shift+Page_Up   { move-column-to-workspace-up; }
    Mod+Shift+U         { move-column-to-workspace-down; }
    Mod+Shift+I         { move-column-to-workspace-up; }

    // Alternatively, there are commands to move just a single window:
    // Mod+Ctrl+Page_Down { move-window-to-workspace-down; }
    // ...

    Mod+Ctrl+Page_Down { move-workspace-down; }
    Mod+Ctrl+Page_Up   { move-workspace-up; }
    Mod+Ctrl+U         { move-workspace-down; }
    Mod+Ctrl+I         { move-workspace-up; }

    // You can bind mouse wheel scroll ticks using the following syntax.
    // These binds will change direction based on the natural-scroll setting.
    //
    // To avoid scrolling through workspaces really fast, you can use
    // the cooldown-ms property. The bind will be rate-limited to this value.
    // You can set a cooldown on any bind, but it's most useful for the wheel.
    Mod+WheelScrollDown      cooldown-ms=150 { focus-column-right; }
    Mod+WheelScrollUp        cooldown-ms=150 { focus-column-left; }
    Mod+Shift+WheelScrollDown cooldown-ms=150 { move-column-right; }
    Mod+Shift+WheelScrollUp  cooldown-ms=150 { move-column-left; }
    Mod+Ctrl+WheelScrollDown cooldown-ms=150 { focus-window-or-monitor-down; }
    Mod+Ctrl+WheelScrollUp   cooldown-ms=150 { focus-window-or-monitor-up; }
    Mod+Ctrl+Shift+WheelScrollDown cooldown-ms=150 { move-window-down-or-to-workspace-down; }
    Mod+Ctrl+Shift+WheelScrollUp   cooldown-ms=150 { move-window-up-or-to-workspace-up; }

    Mod+WheelScrollRight cooldown-ms=150 { focus-column-right; }
    Mod+WheelScrollLeft  cooldown-ms=150 { focus-column-left; }
    Mod+Shift+WheelScrollRight cooldown-ms=150 { move-column-right; }
    Mod+Shift+WheelScrollLeft cooldown-ms=150 { move-column-left; }

    // Similarly, you can bind touchpad scroll "ticks".
    // Touchpad scrolling is continuous, so for these binds it is split into
    // discrete intervals.
    // These binds are also affected by touchpad's natural-scroll, so these
    // example binds are "inverted", since we have natural-scroll enabled for
    // touchpads by default.
    // Mod+TouchpadScrollDown { spawn "wpctl" "set-volume" "@DEFAULT_AUDIO_SINK@" "0.02+"; }
    // Mod+TouchpadScrollUp   { spawn "wpctl" "set-volume" "@DEFAULT_AUDIO_SINK@" "0.02-"; }

    // You can refer to workspaces by index. However, keep in mind that
    // niri is a dynamic workspace system, so these commands are kind of
    // "best effort". Trying to refer to a workspace index bigger than
    // the current workspace count will instead refer to the bottommost
    // (empty) workspace.
    //
    // For example, with 2 workspaces + 1 empty, indices 3, 4, 5 and so on
    // will all refer to the 3rd workspace.
    Mod+1 { focus-workspace 1; }
    Mod+2 { focus-workspace 2; }
    Mod+3 { focus-workspace 3; }
    Mod+4 { focus-workspace 4; }
    Mod+5 { focus-workspace 5; }
    Mod+6 { focus-workspace 6; }
    Mod+7 { focus-workspace 7; }
    Mod+8 { focus-workspace 8; }
    Mod+9 { focus-workspace 9; }
    Mod+Ctrl+1 { move-column-to-workspace 1; }
    Mod+Ctrl+2 { move-column-to-workspace 2; }
    Mod+Ctrl+3 { move-column-to-workspace 3; }
    Mod+Ctrl+4 { move-column-to-workspace 4; }
    Mod+Ctrl+5 { move-column-to-workspace 5; }
    Mod+Ctrl+6 { move-column-to-workspace 6; }
    Mod+Ctrl+7 { move-column-to-workspace 7; }
    Mod+Ctrl+8 { move-column-to-workspace 8; }
    Mod+Ctrl+9 { move-column-to-workspace 9; }

    // Alternatively, there are commands to move just a single window:
    // Mod+Ctrl+1 { move-window-to-workspace 1; }

    // Switches focus between the current and the previous workspace.
    Mod+Tab { focus-workspace-previous; }

    Mod+Comma  { consume-or-expel-window-left; }
    Mod+Period { consume-or-expel-window-right; }
    Mod+W { toggle-column-tabbed-display; }

    Mod+R { switch-preset-column-width; }
    Mod+F { maximize-column; }
    Mod+G { expand-column-to-available-width; }
    Mod+T { toggle-column-tabbed-display; }
    Mod+Shift+F { fullscreen-window; }
    Mod+A { switch-focus-between-floating-and-tiling; }
    Mod+S { toggle-window-floating; }

    Mod+Alt+R { switch-preset-window-height; }
    Mod+Alt+Ctrl+R { reset-window-height; }
    Mod+C { center-column; }

    // Finer width adjustments.
    // This command can also:
    // * set width in pixels: "1000"
    // * adjust width in pixels: "-5" or "+5"
    // * set width as a percentage of screen width: "25%"
    // * adjust width as a percentage of screen width: "-10%" or "+10%"
    // Pixel sizes use logical, or scaled, pixels. I.e. on an output with scale 2.0,
    // set-column-width "100" will make the column occupy 200 physical screen pixels.
    Mod+Minus { set-column-width "-10%"; }
    Mod+Equal { set-column-width "+10%"; }
    Mod+Alt+WheelScrollUp { set-column-width "+10%"; }
    Mod+Alt+WheelScrollDown { set-column-width "-10%"; }

    // Finer height adjustments when in column with other windows.
    Mod+Shift+Minus { set-window-height "-10%"; }
    Mod+Shift+Equal { set-window-height "+10%"; }

    Print { screenshot; }
    Ctrl+Print { screenshot-screen; }
    Alt+Print { screenshot-window; }

    // One-handed screenshot bindings
    Mod+Shift+S { screenshot; }
    Mod+Shift+A { screenshot-screen; }
    Mod+Shift+W { screenshot-window; }

    // The quit action will show a confirmation dialog to avoid accidental exits.
    Mod+Shift+E { quit; }

    // Powers off the monitors. To turn them back on, do any input like
    // moving the mouse or pressing any other key.
    Mod+Shift+P { power-off-monitors; }
}
